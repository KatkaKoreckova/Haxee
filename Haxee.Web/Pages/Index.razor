@page "/"
@inject IDbContextFactory<DataContext> _dbContextFactory
@layout EmptyLayout

<PageTitle>Haxee</PageTitle>


<div class="landing flex flex-col justify-center sm:py-12">
    <div class="p-10 xs:p-0 max-w-2xl w-full md:mx-auto md:w-1/2 md:max-w-1/2">
        <div class="w-full flex flex-row justify-center mb-6">
            <img src="images/LSTME-logo.png" class="w-40 self-center " />
        </div>
        <div class="flex flex-col justify-center items-center space-y-4">
            @if (_isLoaded && _activity is not null)
            {
                <a href="/monitor-leaderboard/@_activity.Id" class="button-card-small max-w-sm">
                    <span class="text-mainPurple self-center w-max"><i class="fa-solid fa-award"></i></span>
                    <span class="text-darkBlue self-center w-max">Leaderboard</span>
                </a>
            }
            <a href="/auth/login" class="button-card-small max-w-sm">
               <span class="text-mainPurple self-center w-max"><i class="fa-solid fa-arrow-right-to-bracket"></i></span>
               <span class="text-darkBlue self-center w-max">Log in</span>
            </a>
        </div>
    </div>
</div>

@code {
    private Activity? _activity;
    private bool _isLoaded;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        await LoadActivityAsync();
    }

    private async Task LoadActivityAsync()
    {
        using var db = _dbContextFactory.CreateDbContext();
        _activity = await db.Activities.AsNoTracking().FirstOrDefaultAsync(x => x.Status.Equals(ActivityStatus.InProgress));

        _isLoaded = true;
        StateHasChanged();
    }
}