@inject IDbContextFactory<DataContext> _dbContextFactory

<div>
    @if(_attendeesStatsModel is not null)
    {
        <label>Účastníci</label
        <label>Čakajúci @_attendeesStatsModel.Waiting</label>
        <label>Na trati @_attendeesStatsModel.InProgress</label>
        <label>V cieli @_attendeesStatsModel.Completed</label>
    }
</div>

@code {
    [Parameter]
    public required int Year { get; set; }

    private AttendeesStatsModel? _attendeesStatsModel;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;
            
        using var db = _dbContextFactory.CreateDbContext();
        var year = await db.Years
            .Include(x => x.Attendees)
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.YearValue.Equals(Year));

        if (year is null)
            return;

        _attendeesStatsModel = new()
        {
            Waiting = year.Attendees.Where(x => x.StartedAt == null).Count(),
            InProgress = year.Attendees.Where(x => x.StartedAt != null && x.EndedAt == null).Count(),
            Completed = year.Attendees.Where(x => x.EndedAt != null).Count()
        };

        StateHasChanged();
    }
}
