@inject IDbContextFactory<DataContext> _dbContextFactory

<div>
    @if(_attendeesStatsModel is not null)
    {
        <div class="bg-slate-200 rounded-md shadow-md shadow-slate-300 flex flex-col border-l-8 border-yellow p-3 h-full">
            <div class="flex flex-row items-center text-darkBlue mr-14">
                <h3 class="self-center font-extralight"><i class="fa-solid fa-user-group"></i></h3>
                <h3 class="ml-3 self-center">Účastníci</h3>
            </div>
            <div class="grid grid-cols-3 grid-rows-3 gap-2 mt-3">
                <div class="col-start-1 row-start-1 col-span-2">
                    Čakajúci:
                </div>
                <div class="col-start-3 text-orange text-center font-bold row-start-1 col-span-2">
                    @_attendeesStatsModel.Waiting
                </div>
                <div class="col-start-1 row-start-2 col-span-2">
                    Na trati:
                </div>
                <div class="col-start-3 text-orange text-center font-bold row-start-2 col-span-2">
                    @_attendeesStatsModel.InProgress
                </div>
                <div class="col-start-1 row-start-3 col-span-2">
                    V cieli:
                </div>
                <div class="col-start-3 text-orange text-center font-bold row-start-3 col-span-2">
                    @_attendeesStatsModel.Completed
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public required int Year { get; set; }

    private AttendeesStatsModel? _attendeesStatsModel;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;
            
        using var db = _dbContextFactory.CreateDbContext();
        var year = await db.Years
            .Include(x => x.Attendees)
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.YearValue.Equals(Year));

        if (year is null)
            return;

        _attendeesStatsModel = new()
        {
            Waiting = year.Attendees.Where(x => x.StartedAt == null).Count(),
            InProgress = year.Attendees.Where(x => x.StartedAt != null && x.EndedAt == null).Count(),
            Completed = year.Attendees.Where(x => x.EndedAt != null).Count()
        };

        StateHasChanged();
    }
}
