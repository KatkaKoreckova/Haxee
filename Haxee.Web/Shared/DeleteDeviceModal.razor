@inherits AbstractModal
@inject IDbContextFactory<DataContext> _dbContextFactory

<Modal @ref="Modal" Title="Zmazať zariadenie" SubmitText="Odstrániť" OnSubmitAttempted="OnSubmitAttempted" RedSubmit="true">
    Ste si istý, že chcete zmazať zariadenie <span class="warning-text">@_deviceName</span>?<br />
    <span class="italic">Táto akcia sa nedá navrátiť.</span>
</Modal>

@code {
    [CascadingParameter(Name = Constants.CascadingParameters.CurrentAccount)]
    private User _user { get; set; } = default!;

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    private int? _deviceId;
    private string? _deviceName;

    public void Open(int deviceId, string deviceName)
    {
        _deviceId = deviceId;
        _deviceName = deviceName;

        StateHasChanged();
        base.Open();
    }

    private async Task OnSubmitAttempted()
    {
        if (Modal is null)
            return;

        using var db = _dbContextFactory.CreateDbContext();

        var targetDevice = await db.Devices.FirstOrDefaultAsync(x => x.Id.Equals(_deviceId));

        if (targetDevice is null)
            return;

        db.Devices.Remove(targetDevice);
        await db.SaveChangesAsync();

        await Modal.Close();
        await OnSubmit.InvokeAsync();
    }
}